<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="yes"?>
<!-- keep one blank line between list items -->
<?rfc comments="yes" ?>
<!-- show cref output -->
<?rfc inline="yes" ?>
<!-- inline cref output -->
<!-- end of list of popular I-D processing instructions -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="bcp" docName="draft-ietf-regext-unhandled-namespaces-03" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3" consensus="true">
  <!-- xml2rfc v2v3 conversion 2.47.0 -->
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="unhandledNamespaces">
    Extensible Provisioning Protocol (EPP) Unhandled Namespaces</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-regext-unhandled-namespaces-02"/>
    <author fullname="James Gould" initials="J.G" surname="Gould">
      <organization>VeriSign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code>20190</code>
          <country>US</country>
        </postal>
        <email>jgould@verisign.com</email>
        <uri>http://www.verisigninc.com</uri>
      </address>
    </author>
    <author fullname="Martin Casanova" initials="M.C" surname="Casanova">
      <organization>SWITCH</organization>
      <address>
        <postal>
          <street>P.O. Box</street>
          <city>Zurich</city>
          <region>ZH</region>
          <code>8021</code>
          <country>CH</country>
        </postal>
        <email>martin.casanova@switch.ch</email>
        <uri>http://www.switch.ch</uri>
      </address>
    </author>
    <date day="6" month="August" year="2020"/>
    <abstract>
      <t>The Extensible Provisioning Protocol (EPP), as defined in RFC 5730,
      includes a method for the client and server to
      determine the objects to be managed during a session and the object
      extensions to be used during a session.  The services are identified using
      namespace URIs.  How should the server handle
      service data that needs to be returned in the response when
      the client does not support the required service namespace URI,
      which is referred to as an unhandled namespace?  An unhandled namespace
      is a significant issue for the processing of RFC 5730
      poll messages, since poll messages are inserted
      by the server prior to knowing the supported client services,
      and the client needs to be capable of processing all poll messages.
      This document defines an operational practice that enables the server
      to return information associated with unhandled namespace URIs that is
      compliant with the negotiated services defined in
      RFC 5730.</t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Introduction</name>
      <t>The Extensible Provisioning Protocol (EPP), as defined in <xref target="RFC5730" format="default"/>, includes a method for the client and server to
      determine the objects to be managed during a session and the object
      extensions to be used during a session.  The services are identified using
      namespace URIs.  How should the server handle
      service data that needs to be returned in the response when
      the client does not support the required service namespace URI,
      which is referred to as an unhandled namespace?  An unhandled namespace
      is a significant issue for the processing of <xref target="RFC5730" format="default"/> poll messages, since poll messages are inserted
      by the server prior to knowing the supported client services,
      and the client needs to be capable of processing all poll messages.
      An unhandled namespace is an issue also for general EPP responses when the
      server has information that it cannot return to the client due to
      the client's supported services.  The server should be able to return
      unhandled namespace information that
      the client can process later.  This document defines an operational
      practice that enables the server to return information associated
      with unhandled namespace URIs that is compliant with the negotiated
      services defined in <xref target="RFC5730" format="default"/>.</t>
      <section numbered="true" toc="default">
        <name>Conventions Used in This Document</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119" format="default">RFC 2119</xref>.</t>
        <t>XML is case sensitive. Unless stated otherwise, XML specifications
        and examples provided in this document MUST be interpreted in the
        character case presented in order to develop a conforming
        implementation.</t>
        <t>In examples, "S:" represents lines returned by a protocol server.
        Indentation and white space in examples are provided only to illustrate element relationships
        and are not a REQUIRED feature of this protocol.
        </t>
        <t>The examples reference XML namespace prefixes that are used for the associated XML namespaces.
        Implementations MUST NOT depend on the example XML namespaces and instead employ a proper
        namespace-aware XML parser and serializer to interpret and
        output the XML documents.  The example namespace prefixes used and their associated XML namespaces include:</t>
        <dl newline="false" spacing="compact" indent="4">
          <dt>"changePoll":</dt>
          <dd>urn:ietf:params:xml:ns:changePoll-1.0</dd>
          <dt>"domain":</dt>
          <dd>urn:ietf:params:xml:ns:domain-1.0</dd>
          <dt>"secDNS":</dt>
          <dd>urn:ietf:params:xml:ns:secDNS-1.1</dd>
        </dl>
        <t>In the template example XML, placeholder content is represented by the following variables:</t>
        <dl newline="false" spacing="compact" indent="4">
          <dt>"[NAMESPACE-XML]":</dt>
          <dd>XML content associated with a login service namespace URI.
            An example is the &lt;domain:infData&gt; element content in <xref target="RFC5731" format="default"/>.</dd>
          <dt>"[NAMESPACE-URI]":</dt>
          <dd>XML namespace URI associated with the [NAMESPACE-XML] XML content.
            An example is "urn:ietf:params:xml:ns:domain-1.0" in <xref target="RFC5731" format="default"/>.</dd>
        </dl>
      </section>
    </section>
    <section anchor="unhandledNamespace" numbered="true" toc="default">
      <name>Unhandled Namespaces</name>
      <t>An Unhandled Namespace is an XML namespace that is associated with a response extension that is
	  not included in the client-specified EPP login services of <xref target="RFC5730" format="default"/>.  The EPP login
	  services consists of the set of XML namespace URIs included in the &lt;objURI&gt; or &lt;extURI&gt; elements of
	  the <xref target="RFC5730" format="default"/> EPP &lt;login&gt; command.  The services supported by the server are
	  included in the &lt;objURI&gt; and &lt;extURI&gt; elements of the <xref target="RFC5730" format="default"/> EPP &lt;greeting&gt;, which should be
	  a superset of the login services included in the EPP &lt;login&gt; command.  A server may have information
	  associated with a specific namespace that it needs to return in the response to a client.  The unhandled namespaces problem
	  exists when the server has information, that it needs to return to the client, that is not supported by the client based on the
	  negotiated EPP &lt;login&gt; command services.</t>
    </section>
    <section anchor="extValueApproach" numbered="true" toc="default">
      <name>Use of EPP &lt;extValue&gt; for Unhandled Namespace Data</name>
      <t>When a server has data to return to the client, that the client does not support based on the login services,
      the server MAY return a successful response, with the data for each unsupported namespace moved into an
      <xref target="RFC5730" format="default"/> &lt;extValue&gt; element.  The unhandled namespace will not cause an error response,
      but the unhandled namespace data will instead be moved to an &lt;extValue&gt; element, along with a reason why
      the unhandled namespace data could not be included in the appropriate location of the response.
      The &lt;extValue&gt; element XML will not be processed by the XML processor.  The &lt;extValue&gt;
      element contains the following child elements:
      </t>
      <dl newline="false" spacing="compact" indent="4">
        <dt>&lt;value&gt;:</dt>
        <dd>Contains a child-element with the unhandled namespace XML.
          The XML namespace and namespace prefix of the child element MUST be defined, which MAY be defined in the &lt;value&gt; element or in the the child element.
          XML processing of the &lt;value&gt; element is disabled in
          <xref target="RFC5730" format="default"/>, so the information can safely be returned in the &lt;value&gt; element.</dd>
        <dt>&lt;reason&gt;:</dt>
        <dd>A formatted human-readable message that indicates the reason the
          unhandled namespace data was not returned in the appropriate location of the response.  The formatted reason
          SHOULD follow the <xref target="RFC5234" format="default">Augmented Backus-Naur Form (ABNF) grammar</xref> format: NAMESPACE-URI "not in login services",
          where NAMESPACE-URI is the unhandled XML namespace like "urn:ietf:params:xml:ns:domain-1.0" for <xref target="RFC5731" format="default"/>.</dd>
      </dl>
      <t>This document supports handling of unsupported namespaces for <xref target="RFC3735" format="default"/> object-level extensions and command-response extensions.
      This document does not support <xref target="RFC3735" format="default"/> protocol-level extensions or authentication information extensions.
      Refer to the following sections on how to handle an unsupported object-level extension namespace or an unsupported command-response extension namespace.</t>
      <section anchor="objectLevelExtension" numbered="true" toc="default">
        <name>Unhandled Object-Level Extension</name>
        <t>An object-level extension in <xref target="RFC5730" format="default"/> is a child element of the &lt;resData&gt; element.  If the client does not handle
        the namespace of the object-level extension, then the &lt;resData&gt; element is removed and its object-level extension child element is moved into a
        <xref target="RFC5730" format="default"/> &lt;extValue&gt; &lt;value&gt; element, with the namespace URI included in the corresponding &lt;extValue&gt; &lt;reason&gt; element.
        The response becomes a general EPP response without the &lt;resData&gt; element.</t>
        <t keepWithNext="true">Template response for a supported object-level extension.
		      The [NAMESPACE-XML] variable represents the object-level extension XML.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:    </result>
S:    <resData>
S:      [NAMESPACE-XML]
S:    </resData>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
        <t keepWithNext="true">Template unhandled namespace response for an unsupported object-level extension.
		    The [NAMESPACE-XML] variable represents the object-level extension XML and the [NAMESPACE-URI]
		    variable represents the object-level extension XML namespace URI.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:      <extValue>
S:        <value>
S:          [NAMESPACE-XML]
S:        </value>
S:        <reason>
S:          [NAMESPACE-URI] not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
        <t>The EPP response is converted from an object response to a general EPP response by the server when the client does not support the object-level extension namespace URI.
        Below is example of converting the &lt;transfer&gt; query response example in <xref target="RFC5731" format="default"/> to an unhandled namespace response.</t>
        <t keepWithNext="true"><xref target="RFC5731" format="default"/> example &lt;transfer&gt; query response converted into an unhandled namespace response.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:      <extValue>
S:        <value>
S:          <domain:trnData
S:            xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:            <domain:name>example.com</domain:name>
S:            <domain:trStatus>pending</domain:trStatus>
S:            <domain:reID>ClientX</domain:reID>
S:            <domain:reDate>2000-06-06T22:00:00.0Z</domain:reDate>
S:            <domain:acID>ClientY</domain:acID>
S:            <domain:acDate>2000-06-11T22:00:00.0Z</domain:acDate>
S:            <domain:exDate>2002-09-08T22:00:00.0Z</domain:exDate>
S:          </domain:trnData>
S:        </value>
S:        <reason>
S:          urn:ietf:params:xml:ns:domain-1.0 not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
      </section>
      <section anchor="commandResponseLevelExtension" numbered="true" toc="default">
        <name>Unhandled Command-Response Extension</name>
        <t>A command-response extension in <xref target="RFC5730" format="default"/> is a child element of the &lt;extension&gt; element.  If the client does not handle
        the namespace of the command-response extension, the command-response child element is moved into a <xref target="RFC5730" format="default"/> &lt;extValue&gt; &lt;value&gt;
        element, with the namespace URI included in the corresponding &lt;extValue&gt; &lt;reason&gt; element.  If after moving the command-response child element there
        are no additional command-response child elements, the &lt;extension&gt; element MUST be removed.</t>
        <t keepWithNext="true">Template response for a supported command-response extension.
		      The [NAMESPACE-XML] variable represents the command-response extension XML.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:    </result>
S:    <extension>
S:      [NAMESPACE-XML]
S:    </extension>
S:    <trID>
S:     <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
        <t keepWithNext="true">Template unhandled namespace response for an unsupported command-response extension.  The [NAMESPACE-XML] variable represents the
		    command-response extension XML and the
		      [NAMESPACE-URI] variable represents the command-response extension XML namespace URI.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:      <extValue>
S:        <value>
S:         [NAMESPACE-XML]
S:        </value>
S:        <reason>
S:          [NAMESPACE-URI] not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
        <t>The EPP response is converted to an unhandled namespace response by moving the unhandled command-response extension from under the &lt;extension&gt; to an &lt;extValue&gt; element.
        Below is example of converting the DS Data Interface &lt;info&gt; response example in <xref target="RFC5910" format="default"/> to an unhandled namespace response.</t>
        <t keepWithNext="true"><xref target="RFC5910" format="default"/> DS Data Interface &lt;info&gt; response converted into an unhandled namespace response.</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:      <extValue>
S:        <value>
S:        <secDNS:infData
S:          xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1">
S:          <secDNS:dsData>
S:          <secDNS:keyTag>12345</secDNS:keyTag>
S:          <secDNS:alg>3</secDNS:alg>
S:          <secDNS:digestType>1</secDNS:digestType>
S:          <secDNS:digest>49FD46E6C4B45C55D4AC</secDNS:digest>
S:          </secDNS:dsData>
S:          </secDNS:infData>
S:        </value>
S:        <reason>
S:          urn:ietf:params:xml:ns:secDNS-1.1 not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>example.com</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="ok"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:ns>
S:          <domain:hostObj>ns1.example.com</domain:hostObj>
S:          <domain:hostObj>ns2.example.com</domain:hostObj>
S:        </domain:ns>
S:        <domain:host>ns1.example.com</domain:host>
S:        <domain:host>ns2.example.com</domain:host>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:upID>ClientX</domain:upID>
S:        <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>
S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
S:        <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>
S:        <domain:authInfo>
S:          <domain:pw>2fooBAR</domain:pw>
S:        </domain:authInfo>
S:      </domain:infData>
S:    </resData>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
      </section>
    </section>
    <section anchor="signal-client-server-support" numbered="true" toc="default">
      <name>Signaling Client and Server Support</name>
      <t>This document does not define new protocol but a Best Current Practice (BCP) using the existing EPP protocol, where
        the client and the server can signal support for the BCP using a namespace URI in the login and greeting extension services.
        The namespace URI "urn:ietf:params:xml:ns:epp:unhandled-namespaces-1.0" is used to signal support for the BCP.  The
        client includes the namespace URI in an &lt;svcExtension&gt; &lt;extURI&gt; element of the <xref target="RFC5730" format="default"/> &lt;login&gt; Command.
        The server includes the namespace URI in an &lt;svcExtension&gt; &lt;extURI&gt; element of the <xref target="RFC5730" format="default"/> Greeting.</t>
      <t>A client that receives the namespace URI in the server's Greeting extension services, can expect the following supported behavior by the server:
      </t>
      <ol spacing="compact" type="1">
        <li>Support unhandled namespace object-level extensions and command-response extensions in EPP poll messages, per <xref target="usagePollMessages" format="default"/>.</li>
        <li>Support the option of unhandled namespace command-response extensions in general EPP responses, per <xref target="usageGeneralResponses" format="default"/>.</li>
      </ol>
      <t>A server that receives the namespace URI in the client's &lt;login&gt; Command extension services, can expect the following supported behavior by the client:
      </t>
      <ol spacing="compact" type="1">
        <li>Support monitoring the EPP poll messages and general EPP responses for unhandled namespaces.</li>
      </ol>
    </section>
    <section anchor="usageGeneralResponses" numbered="true" toc="default">
      <name>Usage with General EPP Responses</name>
      <t>The unhandled namespace approach defined in <xref target="extValueApproach" format="default"/>
      MAY be used for a general EPP response to an EPP command.  A general EPP response
      includes any non-poll message EPP response.  The use of the unhandled namespace approach
      for poll message EPP responses is defined in <xref target="usagePollMessages" format="default"/>.
      The server MAY exclude the unhandled namespace information in the general EPP response
      or MAY include it using the unhandled namespace approach.</t>
      <t>The unhandled namespace approach for general EPP responses SHOULD only be applicable
      to command-response extensions, defined in <xref target="commandResponseLevelExtension" format="default"/>,
      since the server SHOULD NOT accept an object-level EPP command if the client did not
      include the object-level namespace URI in the login services.  An object-level
      EPP response extension is returned when the server successfully executes an
      object-level EPP command extension.  The server MAY return an unhandled
      object-level extension to the client as defined in <xref target="objectLevelExtension" format="default"/>.</t>
      <t>Returning domain name Redemption Grace Period (RGP) data, based on <xref target="RFC3915" format="default"/>,
      provides an example of applying the unhandled namespace approach for a general EPP response.
      If the client
      does not include the "urn:ietf:params:xml:ns:rgp-1.0" namespace URI in the login
      services, and the domain &lt;info&gt; response of a domain name does have RGP
      information, the server MAY exclude the &lt;rgp:infData&gt; element from the EPP response
      or MAY include it under in the &lt;extValue&gt; element per <xref target="commandResponseLevelExtension" format="default"/>.</t>
      <t keepWithNext="true"><xref target="RFC5731" format="default"/> domain name &lt;info&gt; response with the unhandled
		    <xref target="RFC3915" format="default"/> &lt;rgp:infData&gt; element included under an &lt;extValue&gt; element:
      </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:      <extValue>
S:        <value>
S:          <rgp:infData xmlns:rgp="urn:ietf:params:xml:ns:rgp-1.0">
S:            <rgp:rgpStatus s="redemptionPeriod"/>
S:          </rgp:infData>
S:        </value>
S:        <reason>
S:          urn:ietf:params:xml:ns:rgp-1.0 not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>example.com</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="pendingDelete"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:ns>
S:          <domain:hostObj>ns1.example.com</domain:hostObj>
S:          <domain:hostObj>ns1.example.net</domain:hostObj>
S:        </domain:ns>
S:        <domain:host>ns1.example.com</domain:host>
S:        <domain:host>ns2.example.com</domain:host>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>1999-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:upID>ClientX</domain:upID>
S:        <domain:upDate>1999-12-03T09:00:00.0Z</domain:upDate>
S:        <domain:exDate>2005-04-03T22:00:00.0Z</domain:exDate>
S:        <domain:trDate>2000-04-08T09:00:00.0Z</domain:trDate>
S:        <domain:authInfo>
S:          <domain:pw>2fooBAR</domain:pw>
S:        </domain:authInfo>
S:      </domain:infData>
S:    </resData>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
    </section>
    <section anchor="usagePollMessages" numbered="true" toc="default">
      <name>Usage with Poll Message EPP Responses</name>
      <t>The unhandled namespace approach, defined in <xref target="extValueApproach" format="default"/>,
      MUST be used if there is unhandled namespace information included in an EPP &lt;poll&gt; message response.
      The server inserts poll messages into the client's poll queue independent of knowing the supported
      client login services, therefore there may be unhandled object-level and command-response
      extensions included in a client's poll queue.  In <xref target="RFC5730" format="default"/>, the &lt;poll&gt; command
      is used by the client to retrieve and acknowledge poll messages that have been
      inserted by the server.  The &lt;poll&gt; message response is an EPP response that includes the
      &lt;msgQ&gt; element that provides poll queue meta-data about the message.  The
      unhandled namespace approach, defined in <xref target="extValueApproach" format="default"/>, is used
      for an unhandled object-level extension and for each of the
      unhandled command-response extensions attached to the &lt;poll&gt; message response.  The resulting
      EPP &lt;poll&gt; message response MAY have either or both the object-level extension or
      command-response extensions moved to &lt;extValue&gt; elements, as defined in
      <xref target="extValueApproach" format="default"/>.</t>
      <t>The Change Poll Message, as defined in <xref target="I-D.ietf-regext-change-poll" format="default"/>, which is an extension of any EPP object,
      is an example of applying the unhandled namespace approach for EPP &lt;poll&gt; message responses.
      The object that will be used in the examples is a <xref target="RFC5731" format="default"/> domain name object.</t>
      <t keepWithNext="true"><xref target="RFC5731" format="default"/> domain name &lt;info&gt; &lt;poll&gt; message response with the unhandled
		    <xref target="I-D.ietf-regext-change-poll" format="default"/> &lt;changePoll:changeData&gt; element included under an &lt;extValue&gt; element:
      </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1301">
S:      <msg>Command completed successfully; ack to dequeue</msg>
S:      <extValue>
S:        <value>
S:          <changePoll:changeData
S:          xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
S:            state="after">
S:            <changePoll:operation>update</changePoll:operation>
S:            <changePoll:date>
S:              2013-11-22T05:00:00.000Z</changePoll:date>
S:            <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:            <changePoll:who>URS Admin</changePoll:who>
S:            <changePoll:caseId type="urs">urs123
S:            </changePoll:caseId>
S:            <changePoll:reason>URS Lock</changePoll:reason>
S:          </changePoll:changeData>
S:        </value>
S:        <reason>
S:      urn:ietf:params:xml:ns:changePoll-1.0 not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <msgQ
S:      count="15"
S:      id="1"
S:    >
S:      <qDate>2018-08-24T19:21:51.087Z</qDate>
S:      <msg>Registry initiated update of domain.</msg>
S:    </msgQ>
S:    <resData>
S:      <domain:infData
S:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>change-poll.tld</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="serverUpdateProhibited"/>
S:        <domain:status s="serverDeleteProhibited"/>
S:        <domain:status s="serverTransferProhibited"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>2012-05-03T04:00:00.000Z</domain:crDate>
S:        <domain:upID>ClientZ</domain:upID>
S:        <domain:upDate>2013-11-22T05:00:00.000Z</domain:upDate>
S:        <domain:exDate>2014-05-03T04:00:00.000Z</domain:exDate>
S:      </domain:infData>
S:    </resData>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
      <t keepWithNext="true">Unhandled <xref target="RFC5731" format="default"/> domain name &lt;info&gt; &lt;poll&gt; message response and the unhandled
		    <xref target="I-D.ietf-regext-change-poll" format="default"/> &lt;changePoll:changeData&gt; element included under an &lt;extValue&gt; element:
      </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1301">
S:      <msg>Command completed successfully; ack to dequeue</msg>
S:      <extValue>
S:        <value>
S:          <domain:infData
S:            xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:            <domain:name>change-poll.tld</domain:name>
S:            <domain:roid>EXAMPLE1-REP</domain:roid>
S:            <domain:status s="serverUpdateProhibited"/>
S:            <domain:status s="serverDeleteProhibited"/>
S:            <domain:status s="serverTransferProhibited"/>
S:            <domain:registrant>jd1234</domain:registrant>
S:            <domain:contact type="admin">sh8013</domain:contact>
S:            <domain:contact type="tech">sh8013</domain:contact>
S:            <domain:clID>ClientX</domain:clID>
S:            <domain:crID>ClientY</domain:crID>
S:            <domain:crDate>2012-05-03T04:00:00.000Z</domain:crDate>
S:            <domain:upID>ClientZ</domain:upID>
S:            <domain:upDate>2013-11-22T05:00:00.000Z</domain:upDate>
S:            <domain:exDate>2014-05-03T04:00:00.000Z</domain:exDate>
S:          </domain:infData>
S:        </value>
S:        <reason>
S:        urn:ietf:params:xml:ns:domain-1.0 not in login services
S:        </reason>
S:      </extValue>
S:      <extValue>
S:        <value>
S:          <changePoll:changeData
S:          xmlns:changePoll="urn:ietf:params:xml:ns:changePoll-1.0"
S:            state="after">
S:            <changePoll:operation>update</changePoll:operation>
S:            <changePoll:date>
S:              2013-11-22T05:00:00.000Z</changePoll:date>
S:            <changePoll:svTRID>12345-XYZ</changePoll:svTRID>
S:            <changePoll:who>URS Admin</changePoll:who>
S:            <changePoll:caseId type="urs">urs123
S:            </changePoll:caseId>
S:            <changePoll:reason>URS Lock</changePoll:reason>
S:          </changePoll:changeData>
S:        </value>
S:        <reason>
S:      urn:ietf:params:xml:ns:changePoll-1.0 not in login services
S:        </reason>
S:      </extValue>
S:    </result>
S:    <msgQ
S:      count="15"
S:      id="1"
S:    >
S:      <qDate>2018-08-24T19:23:12.822Z</qDate>
S:      <msg>Registry initiated update of domain.</msg>
S:    </msgQ>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54322-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>
            ]]></artwork>
    </section>
    <section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <section anchor="IANA-XML-Namespace" numbered="true" toc="default">
        <name>XML Namespace</name>
        <t>
             This document uses URNs to describe XML namespaces
             conforming to a registry mechanism described in <xref target="RFC3688" format="default"/>.
             The following URI assignment is requested of IANA:
        </t>
        <t>Registration request for the unhandled namespaces namespace:</t>
        <ul empty="true" spacing="compact">
          <li>URI: urn:ietf:params:xml:ns:epp:unhandled-namespaces-1.0</li>
          <li>Registrant Contact: IESG</li>
          <li>XML: None. Namespace URIs do not represent an XML specification.</li>
        </ul>
      </section>
      <section anchor="EPP-Extension-Registry" numbered="true" toc="default">
        <name>EPP Extension Registry</name>
        <t>
   The EPP Best Current Practice (BCP) described in this document should be registered by
   the IANA in the EPP Extension Registry described in <xref target="RFC7451" format="default"/>.  The
   details of the registration are as follows:
        </t>
        <t>
   Name of Extension: "Extensible Provisioning Protocol (EPP) Unhandled Namespaces"
        </t>
        <t>
   Document status: Best Current Practice
        </t>
        <t>
   Reference: (insert reference to RFC version of this document)
        </t>
        <t>
   Registrant Name and Email Address: IESG, &lt;iesg@ietf.org&gt;
        </t>
        <t>
   TLDs: Any
        </t>
        <t>
   IPR Disclosure: None
        </t>
        <t>
   Status: Active
        </t>
        <t>
   Notes: None
        </t>
      </section>
    </section>
    <section anchor="Implementation" numbered="true" toc="default">
      <name>Implementation Status</name>
      <t>Note to RFC Editor: Please remove this section and the reference to
         <xref target="RFC7942" format="default">RFC 7942</xref> before publication.</t>
      <t>This section records the status of known implementations of the
      protocol defined by this specification at the time of posting of
      this Internet-Draft, and is based on a proposal described in <xref target="RFC7942" format="default">RFC
      7942</xref>.  The description of implementations in this section is
      intended to assist the IETF in its decision processes in
      progressing drafts to RFCs.  Please note that the listing of any
      individual implementation here does not imply endorsement by the
      IETF.  Furthermore, no effort has been spent to verify the
      information presented here that was supplied by IETF contributors.
      This is not intended as, and must not be construed to be, a
      catalog of available implementations or their features.  Readers
      are advised to note that other implementations may exist.</t>
      <t>According to <xref target="RFC7942" format="default">RFC 7942</xref>, "this will allow reviewers and working
      groups to assign due consideration to documents that have the
      benefit of running code, which may serve as evidence of valuable
      experimentation and feedback that have made the implemented
      protocols more mature.  It is up to the individual working groups
      to use this information as they see fit".</t>
      <section numbered="true" toc="default">
        <name>Verisign EPP SDK</name>
        <t>Organization: Verisign Inc.</t>
        <t>Name: Verisign EPP SDK</t>
        <t>Description: The Verisign EPP SDK includes an implementation of the
        unhandled namespaces for the processing of the poll queue messages.</t>
        <t>Level of maturity: Development</t>
        <t>Coverage: All aspects of the protocol are implemented.</t>
        <t>Licensing: GNU Lesser General Public License</t>
        <t>Contact: jgould@verisign.com</t>
        <t>URL: https://www.verisign.com/en_US/channel-resources/domain-registry-products/epp-sdks</t>
      </section>
      <section numbered="true" toc="default">
        <name>SWITCH Automated DNSSEC Provisioning Process</name>
        <t>Organization: SWITCH</t>
        <t>Name: Registry of .CH and .LI</t>
        <t>Description: SWITCH uses poll messages to inform the registrar about DNSSEC changes at the registry triggered by CDS records. These poll messages are enriched with the 'urn:ietf:params:xml:ns:changePoll-1.0' and the 'urn:ietf:params:xml:ns:secDNS-1.1' extension that are rendered in the poll msg response according to this draft.</t>
        <t>Level of maturity: Operational</t>
        <t>Coverage: All aspects of the protocol are implemented.</t>
        <t>Licensing: Proprietary</t>
        <t>Contact: martin.casanova@switch.ch</t>
        <t>URL: https://www.nic.ch/cds</t>
      </section>
    </section>
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The document do not provide any
      security services beyond those described by <xref target="RFC5730" format="default">EPP</xref> and protocol layers used by EPP. The security
      considerations described in these other specifications apply to this
      specification as well.</t>
    </section>
    <section anchor="Acknowledgements" numbered="true" toc="default">
      <name>Acknowledgements</name>
      <t>The authors wish to thank the following persons for their feedback and suggestions:
        <contact fullname="Scott Hollenbeck"/>,
        <contact fullname="Patrick Mevzek"/>,
        and <contact fullname="Marcel Parodi"/>.
      </t>
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references>
      <name>Normative References</name>
      <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement Levels</title>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="BCP" value="14"/>
          <author initials="S." surname="Bradner" fullname="S. Bradner">
            <organization/>
          </author>
          <date year="1997" month="March"/>
          <abstract>
            <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml">
        <front>
          <title>The IETF XML Registry</title>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="BCP" value="81"/>
          <author initials="M." surname="Mealling" fullname="M. Mealling">
            <organization/>
          </author>
          <date year="2004" month="January"/>
          <abstract>
            <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC3735" target="https://www.rfc-editor.org/info/rfc3735" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3735.xml">
        <front>
          <title>Guidelines for Extending the Extensible Provisioning Protocol (EPP)</title>
          <seriesInfo name="DOI" value="10.17487/RFC3735"/>
          <seriesInfo name="RFC" value="3735"/>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2004" month="March"/>
          <abstract>
            <t>The Extensible Provisioning Protocol (EPP) is an application layer client-server protocol for the provisioning and management of objects stored in a shared central repository.  Specified in XML, the protocol defines generic object management operations and an extensible framework that maps protocol operations to objects.  This document presents guidelines for use of EPP's extension mechanisms to define new features and object management capabilities.  This memo provides information for the Internet community.</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC3915" target="https://www.rfc-editor.org/info/rfc3915" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3915.xml">
        <front>
          <title>Domain Registry Grace Period Mapping for the Extensible Provisioning Protocol (EPP)</title>
          <seriesInfo name="DOI" value="10.17487/RFC3915"/>
          <seriesInfo name="RFC" value="3915"/>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2004" month="September"/>
          <abstract>
            <t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the management of Domain Name System (DNS) domain names subject to "grace period" policies defined by the Internet Corporation for Assigned Names and Numbers (ICANN).  Grace period policies exist to allow protocol actions to be reversed or otherwise revoked during a short period of time after the protocol action has been performed.  Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for grace period processing.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC5234" target="https://www.rfc-editor.org/info/rfc5234" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml">
        <front>
          <title>Augmented BNF for Syntax Specifications: ABNF</title>
          <seriesInfo name="DOI" value="10.17487/RFC5234"/>
          <seriesInfo name="RFC" value="5234"/>
          <seriesInfo name="STD" value="68"/>
          <author initials="D." surname="Crocker" fullname="D. Crocker" role="editor">
            <organization/>
          </author>
          <author initials="P." surname="Overell" fullname="P. Overell">
            <organization/>
          </author>
          <date year="2008" month="January"/>
          <abstract>
            <t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC5730" target="https://www.rfc-editor.org/info/rfc5730" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5730.xml">
        <front>
          <title>Extensible Provisioning Protocol (EPP)</title>
          <seriesInfo name="DOI" value="10.17487/RFC5730"/>
          <seriesInfo name="RFC" value="5730"/>
          <seriesInfo name="STD" value="69"/>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2009" month="August"/>
          <abstract>
            <t>This document describes an application-layer client-server protocol for the provisioning and management of objects stored in a shared central repository.  Specified in XML, the protocol defines generic object management operations and an extensible framework that maps protocol operations to objects.  This document includes a protocol specification, an object mapping template, and an XML media type registration.  This document obsoletes RFC 4930.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC5731" target="https://www.rfc-editor.org/info/rfc5731" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5731.xml">
        <front>
          <title>Extensible Provisioning Protocol (EPP) Domain Name Mapping</title>
          <seriesInfo name="DOI" value="10.17487/RFC5731"/>
          <seriesInfo name="RFC" value="5731"/>
          <seriesInfo name="STD" value="69"/>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2009" month="August"/>
          <abstract>
            <t>This document describes an Extensible Provisioning Protocol (EPP) mapping for the provisioning and management of Internet domain names stored in a shared central repository.  Specified in XML, the mapping defines EPP command syntax and semantics as applied to domain names. This document obsoletes RFC 4931.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC5910" target="https://www.rfc-editor.org/info/rfc5910" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5910.xml">
        <front>
          <title>Domain Name System (DNS) Security Extensions Mapping for the Extensible Provisioning Protocol (EPP)</title>
          <seriesInfo name="DOI" value="10.17487/RFC5910"/>
          <seriesInfo name="RFC" value="5910"/>
          <author initials="J." surname="Gould" fullname="J. Gould">
            <organization/>
          </author>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2010" month="May"/>
          <abstract>
            <t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the provisioning and management of Domain Name System security (DNSSEC) extensions for domain names stored in a shared central repository.  Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for the provisioning of DNS security extensions.  This document obsoletes RFC 4310.  [STANDARDS-TRACK]</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC7451" target="https://www.rfc-editor.org/info/rfc7451" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7451.xml">
        <front>
          <title>Extension Registry for the Extensible Provisioning Protocol</title>
          <seriesInfo name="DOI" value="10.17487/RFC7451"/>
          <seriesInfo name="RFC" value="7451"/>
          <author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck">
            <organization/>
          </author>
          <date year="2015" month="February"/>
          <abstract>
            <t>The Extensible Provisioning Protocol (EPP) includes features to add functionality by extending the protocol.  It does not, however, describe how those extensions are managed.  This document describes a procedure for the registration and management of extensions to EPP, and it specifies a format for an IANA registry to record those extensions.</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="RFC7942" target="https://www.rfc-editor.org/info/rfc7942" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7942.xml">
        <front>
          <title>Improving Awareness of Running Code: The Implementation Status Section</title>
          <seriesInfo name="DOI" value="10.17487/RFC7942"/>
          <seriesInfo name="RFC" value="7942"/>
          <seriesInfo name="BCP" value="205"/>
          <author initials="Y." surname="Sheffer" fullname="Y. Sheffer">
            <organization/>
          </author>
          <author initials="A." surname="Farrel" fullname="A. Farrel">
            <organization/>
          </author>
          <date year="2016" month="July"/>
          <abstract>
            <t>This document describes a simple process that allows authors of Internet-Drafts to record the status of known implementations by including an Implementation Status section.  This will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.</t>
            <t>This process is not mandatory.  Authors of Internet-Drafts are encouraged to consider using the process for their documents, and working groups are invited to think about applying the process to all of their protocol specifications.  This document obsoletes RFC 6982, advancing it to a Best Current Practice.</t>
          </abstract>
        </front>
      </reference>
      <reference anchor="I-D.ietf-regext-change-poll" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-regext-change-poll.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-regext-change-poll-12.txt">
        <front>
          <title>Change Poll Extension for the Extensible Provisioning Protocol (EPP)</title>
          <seriesInfo name="Internet-Draft" value="draft-ietf-regext-change-poll-12"/>
          <author initials="J" surname="Gould" fullname="James Gould">
            <organization/>
          </author>
          <author initials="K" surname="Feher" fullname="Kal Feher">
            <organization/>
          </author>
          <date month="January" day="4" year="2019"/>
          <abstract>
            <t>This document describes an Extensible Provisioning Protocol (EPP) extension for notifying clients of operations on client-sponsored objects that were not initiated by the client through EPP.  These operations may include contractual or policy requirements including but not limited to regular batch processes, customer support actions, Uniform Domain-Name Dispute-Resolution Policy (UDRP) or Uniform Rapid Suspension (URS) actions, court-directed actions, and bulk updates based on customer requests.  Since the client is not directly involved or knowledgable of these operations, the extension is used along with an EPP object mapping to provide the resulting state of the post-operation object, and optionally a pre-operation object, with the operation meta-data of what, when, who, and why.</t>
          </abstract>
        </front>
      </reference>
    </references>
    <section numbered="true" toc="default">
      <name>Change History</name>
      <section anchor="version-00-to-01" numbered="true" toc="default">
        <name>Change from 00 to 01</name>
        <ol spacing="compact" type="1">
          <li>Removed xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" reference from examples.</li>
          <li>removed &lt;extension&gt;&lt;/extension&gt; block from example.</li>
          <li>added SWITCH Automated DNSSEC Provisioning Process at Implementation Status</li>
        </ol>
      </section>
      <section anchor="version-01-to-02" numbered="true" toc="default">
        <name>Change from 01 to 02</name>
        <ol spacing="compact" type="1">
          <li>Ping update</li>
        </ol>
      </section>
      <section anchor="change-02-to-WG00" numbered="true" toc="default">
        <name>Change from 02 to REGEXT 00</name>
        <ol spacing="compact" type="1">
          <li>Changed to regext working group draft by changing draft-gould-casanova-regext-unhandled-namespaces to draft-ietf-regext-unhandled-namespaces.</li>
        </ol>
      </section>
      <section anchor="change-WG00-to-WG01" numbered="true" toc="default">
        <name>Change from REGEXT 00 to REGEXT 01</name>
        <ol spacing="compact" type="1">
          <li>Added the "Signaling Client and Server Support" section to describe the mechanism to signal support for the BCP by the client and the server.</li>
          <li>Added the IANA Considerations section with the registration of the unhandled namespaces
            XML namespace and the registration of the EPP Best Current Practice (BCP) in the EPP Extension Registry.</li>
        </ol>
      </section>
      <section anchor="change-WG01-to-WG02" numbered="true" toc="default">
        <name>Change from REGEXT 01 to REGEXT 02</name>
        <ol spacing="compact" type="1">
          <li>Filled in the acknowledgements section.</li>
          <li>Changed the reference from RFC 5730 to RFC 5731 for the transfer example in section 3.1 "Unhandled Object-Level" Extension.</li>
          <li>Updated the XML namespace to urn:ietf:params:xml:ns:epp:unhandled-namespaces-1.0, which removed bcp from the namespace and bumped the version from 0.1 and 1.0.
          Inclusion of bcp in the XML namespace was discussed at the REGEXT interim meeting.</li>
        </ol>
      </section>
      <section anchor="change-WG02-to-WG03" numbered="true" toc="default">
        <name>Change from REGEXT 02 to REGEXT 03</name>
        <ol spacing="compact" type="1">
          <li>Converted from xml2rfc v2 to v3.</li>
          <li>Updated Acknowledgements to match the approach taken by the RFC Editor with draft-ietf-regext-login-security.</li>
        </ol>
      </section>
    </section>
  </back>
  <!-- vim: set ts=2 sw=2 expandtab: -->
</rfc>
